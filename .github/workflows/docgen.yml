name: Documentation

on:
    push:
        branches:
            - 'master'
        tags-ignore:
            - '**'

# on:
#     pull_request_target:
#         types:
#             - closed
#         branches:
#             - master
      
concurrency: 
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

jobs:
    docgen:
        runs-on: ubuntu-22.04
        name: Generator
        defaults:
            run:
                shell: bash
        steps:
            - name: Install Arturo
              uses: arturo-lang/arturo-action@main
              with: 
                token: ${{ secrets.GITHUB_TOKEN }}
                mode: full
                arch: amd64
                src: ${{ github.ref }}
                metadata: ${{ env.BRANCH_NAME }}-${{ github.sha }}
 
            - if: (matrix.mode != 'safe' && matrix.mode != 'web') && (runner.os != 'Linux' || matrix.arch != 'arm64')
              name: Run tests (Old)
              run: |
                ls -la arturo
                cd arturo 
                cat version/metadata
                arturo -v
                arturo tools/tester.art
                cd ..
 
            - if: matrix.mode == 'full' && (runner.os != 'Linux' || matrix.arch != 'arm64')
              name: Run tests (Unitt)
              run: |
                cd arturo
                arturo tools/unitt-tester.art
                cd ..

            - name: Prepare artifact
              id: artifact-details
              run: |
                binary_path="arturo/bin/arturo"

                artifact_os="macos"
                artifact_os_extra=""
                artifact_arch="${{matrix.arch}}"
                artifact_mode="${{matrix.mode}}"

                if [ "${{runner.os}}" = "Windows" ]; then
                    artifact_os="windows"
                    binary_path="${binary_path}.exe"
                fi
                if [ "${{runner.os}}" = "Linux" ]; then
                    artifact_os="linux"
                    if [ "${{matrix.mode}}" = "web" ]; then
                        artifact_os="js"
                        artifact_arch="web"
                        artifact_mode="mini"
                        binary_path="${binary_path}.js"
                    fi
                    if [ "${{matrix.name}}" = "Linux (amd64 / full / webkit-4.1)" ]; then
                        artifact_os_extra=".webkit41"
                    fi
                fi

                cd arturo
                git_hash=$(git rev-parse --short "$GITHUB_SHA")
                git_stamp="${{ env.BRANCH_NAME}}.${git_hash}"
                cd ..

                artifact_name="arturo-${git_stamp}-${artifact_arch}-${artifact_os}${artifact_os_extra}-${artifact_mode}"

                echo "BINARY_PATH=$binary_path" >> "$GITHUB_OUTPUT"
                echo "ARTIFACT_NAME=$artifact_name" >> "$GITHUB_OUTPUT"

            - name: Upload artifact
              uses: 'actions/upload-artifact@v4'
              with:
                name: ${{ steps.artifact-details.outputs.ARTIFACT_NAME }}
                path: ${{ steps.artifact-details.outputs.BINARY_PATH }}