name: Windows
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
    paths-ignore:
      - 'docs/*'
      - '*.yml'
      - '*.md'
      - 'LICENSE'

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build & Test"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
        version:
          - mini
          - full
    steps:
      - name: "Cancel similar actions in progress"
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: "Checkout"
        uses: actions/checkout@main
        with:
          submodules: recursive

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: 'git base-devel'

      - name: Install dependencies + Build Arturo (full)
        if: matrix.version == 'full'
        shell: msys2 {0}
        run: |
          pacman --noconfirm -S p7zip
          pacman --noconfirm -S mingw-w64-x86_64-gcc
          mkdir dist
          mkdir nim
          curl -L https://nim-lang.org/download/mingw64.zip -o dist/mingw64.zip
          curl -L https://nim-lang.org/download/dlls.zip -o dist/dlls.zip
          curl -L https://nim-lang.org/download/nim-1.6.4_x64.zip -o dist/nim.zip
          7z x dist/mingw64.zip -odist
          7z x dist/dlls.zip -obin
          7z x dist/nim.zip -onim
          
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          export PATH="${{ github.workspace }}/bin":$PATH
          export PATH="${{ github.workspace }}/nim/nim-1.6.4/bin":$PATH
          echo "${{ github.workspace }}/nim/nim-1.6.4/bin" >> $GITHUB_PATH
          ls -la nim/nim-1.6.4
          ls -la nim/nim-1.6.4/bin 
          echo "$GITHUB_PATH"
          
          echo "Running nim"
          nim --version

          ./build.nims install ${{ matrix.version }} log

      - name: Install dependencies + Build Arturo (mini)
        if: matrix.version == 'mini'
        shell: msys2 {0}
        run: |
          pacman --noconfirm -S p7zip
          pacman --noconfirm -S mingw-w64-x86_64-gcc
          mkdir dist
          mkdir nim
          curl -L https://nim-lang.org/download/mingw64.zip -o dist/mingw64.zip
          curl -L https://nim-lang.org/download/dlls.zip -o dist/dlls.zip
          curl -L https://nim-lang.org/download/nim-1.6.4_x64.zip -o dist/nim.zip
          7z x dist/mingw64.zip -odist
          7z x dist/dlls.zip -obin
          7z x dist/nim.zip -onim
          
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          export PATH="${{ github.workspace }}/bin":$PATH
          export PATH="${{ github.workspace }}/nim/nim-1.6.4/bin":$PATH
          echo "${{ github.workspace }}/nim/nim-1.6.4/bin" >> $GITHUB_PATH
          ls -la nim/nim-1.6.4
          ls -la nim/nim-1.6.4/bin 
          echo "$GITHUB_PATH"
          
          echo "Running nim"
          nim --version

          ./build.nims install ${{ matrix.version }} log

      - name: Run unit tests (full)
        if: matrix.version == 'full'
        run: |
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          arturo tools/tester.art

      - name: Run unit tests (mini)
        if: matrix.version == 'mini'
        run: |
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          arturo tools/tester.art

      - name: Upload Artifacts
        uses: 'actions/upload-artifact@v2'
        with:
          name: "arturo-${{matrix.version}}-${{matrix.os}}"
          path: bin/arturo.exe
