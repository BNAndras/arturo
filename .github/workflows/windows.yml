name: Windows
on: [push, pull_request]

jobs:
  cancel:
    name: "Cleanup"
    runs-on: ubuntu-latest
    steps:
      - name: "Get workflow id"
        run: |
          WORKFLOW_ID=$(curl "Authorization: token ${{ github.token }}" https://api.github.com/repos/${{ github.repository }}/actions/workflows/windows.yml | jq '.id')
          echo "Workflow id: ${WORKFLOW_ID}"
          echo "::set-env name=WORKFLOW_ID::${WORKFLOW_ID}"

      - uses: styfle/cancel-workflow-action@0.3.1
        with:
          access_token: ${{ github.token }}
          workflow_id: ${{ env.WORKFLOW_ID }}

  nimble-mini:
    name: "Nimble (mini)"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@main
        with:
          submodules: recursive

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: 'git base-devel'

      - name: Install dependencies
        shell: msys2 {0}
        run: |
          pacman --noconfirm -S --needed
          pacman install --noconfirm -S p7zip
          mkdir dist
          mkdir nim
          curl -L https://nim-lang.org/download/mingw64.zip -o dist/mingw64.zip
          curl -L https://nim-lang.org/download/dlls.zip -o dist/dlls.zip
          curl -L https://nim-lang.org/download/nim-1.4.0_x64.zip -o dist/nim.zip
          unzip dist/mingw64.zip -odist
          unzip dist/dlls.zip -obin
          unzip dist/nim.zip -onim
          echo "${{ github.workspace }}/dist/mingw64/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/nim/nim-1.4.0/bin" >> $GITHUB_PATH
          ls -la nim/nim-1.4.0
          ls -la nim/nim-1.4.0/bin 
          echo "$GITHUB_PATH"

      - name: Install GMP
        shell: msys2 {0}
        run: |
          mkdir gmp_build
          curl -L https://cs.nyu.edu/~exact/core/gmp/gmp-4.1.tar.gz -o gmp_build/gmp.tar.gz
          cd gmp_build
          tar xzvf gmp.tar.gz
          cd gmp-4.1
          ./configure --prefix="${{ github.workspace }}/bin"
          make
          make install
          
      - name: Verify dependecies
        shell: bash -l {0}
        run: |
          echo "Running finish"
          ./nim/nim-1.4.0/finish.exe
          echo "Running nim"
          nim --version
          
      - name: Build Arturo
        shell: bash -l {0}
        run: |
          nimble build -Y "-d:MINI"

  # nimble-full:
  #   name: "Nimble (full)"
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@main
  #       with:
  #         submodules: recursive

  #     - name: Install dependencies
  #       shell: bash -l {0}
  #       run: |
  #         wget -qO - https://nim-lang.org/choosenim/init.sh | bash -s -- -y
  #         echo "/Users/runner/.nimble/bin" >> $GITHUB_PATH
          
  #     - name: Verify dependecies
  #       shell: bash -l {0}
  #       run: |
  #         nim --version
          
  #     - name: Build Arturo
  #       shell: bash -l {0}
  #       run: |
  #         nimble build -Y

  # build-mini:
  #   name: "Build.sh (mini)"
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@main
  #       with:
  #         submodules: recursive

  #     - name: Install dependencies
  #       shell: bash -l {0}
  #       run: |
  #         wget -qO - https://nim-lang.org/choosenim/init.sh | bash -s -- -y
  #         echo "/Users/runner/.nimble/bin" >> $GITHUB_PATH
          
  #     - name: Verify dependecies
  #       shell: bash -l {0}
  #       run: |
  #         nim --version
          
  #     - name: Build Arturo
  #       shell: bash -l {0}
  #       run: |
  #         ./build.sh mini

  # unit-tests:
  #   name: "Unit tests"
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@main
  #       with:
  #         submodules: recursive

  #     - name: Install dependencies
  #       shell: bash -l {0}
  #       run: |
  #         wget -qO - https://nim-lang.org/choosenim/init.sh | bash -s -- -y
  #         echo "/Users/runner/.nimble/bin" >> $GITHUB_PATH
          
  #     - name: Verify dependecies
  #       shell: bash -l {0}
  #       run: |
  #         nim --version
          
  #     - name: Build Arturo
  #       shell: bash -l {0}
  #       run: |
  #         ./build.sh install

  #     - name: Run unit tests
  #       shell: bash -l {0}
  #       run: |
  #         echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
  #         arturo tests/runAll.art   
