bubbleSort [items]{
    changed true
    loop changed {
        changed false
        loop $(range 0 $(size items)-2) {
            if items.$(&)>items.$(&+1) {
                swap items & &+1
                changed true
            }
        }
    }
    items
}/*

proc bubbleSort[T](a: var openarray[T]) =
  var t = true
  for n in countdown(a.len-2, 0):
    if not t: break
    t = false
    for j in 0..n:
      if a[j] <= a[j+1]: continue
      swap a[j], a[j+1]
      t = true

bubbleSort [items]{
    t true
    loop $(range $(size items)-2 0) {
        if $(not t) { return items }
        t false
        loop $(range 0 &){
            if items.$(&)>items.$(&+1) {
                swap items & &+1
                t true
            }
        }
    }
}*/

list $(shuffle|range 1 2000)
list $(bubbleSort list)
loop list {
    print &
}