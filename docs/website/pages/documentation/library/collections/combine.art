name: "combine"
type: :function
description: "get all possible combinations of the elements in given collection"
module: "Collections"
returns: [
                :integer
                 :block
        ]
line: 305
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Collections.nim#L305"
examples: [
                {
                        combine [A B C]
                        ; => [[A B C]]
                        
                        combine.repeated [A B C]
                        ; => [[A A A] [A A B] [A A C] [A B B] [A B C] [A C C] [B B B] [B B C] [B C C] [C C C]]
                }
                 {
                        combine.by:2 [A B C]
                        ; => [[A B] [A C] [B C]]
                        
                        combine.repeated.by:2 [A B C]
                        ; => [[A A] [A B] [A C] [B B] [B C] [C C]]
                        
                        combine.repeated.by: 3 [A B]
                        ; => [[A A A] [A A B] [A B B] [B B B]]
                        
                }
                 {
                        combine.count [A B C]
                        ; => 1
                        
                        combine.count.repeated.by:2 [A B C]
                        ; => 6
                }
        ]
attributes: #[
        by: #[
                types: [
                                :integer
                        ]
                description: "define size of each set"
                ]
        repeated: #[
                types: [
                                :logical
                        ]
                description: "allow for combinations with repeated elements"
                ]
        count: #[
                types: [
                                :logical
                        ]
                description: "just count the number of combinations"
                ]
        ]
arguments: #[
        collection: [
                        :block
                ]
        ]
related: [
                "Collections/permutate"
                 "Collections/couple"
                 "Collections/slice"
                 "Collections/dictionary"
        ]