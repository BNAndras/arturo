name: "dictionary"
type: :function
module: "Converters"
returns: [
        :dictionary
    ]
alias: "#"
infix?: false
description: "create dictionary from given block or file, by getting all internal symbols"
examples: [
        {
            none: #[]               ; none: []
            a: #[
                name: "John"
                age: 34
            ]             
            ; a: [name: "John", age: 34]
            
            d: #[
                name: "John"
                print "we are in the block"
                age: 34
                print "yep"
            ]
            ; we are in the block
            ; yep
            ; => [name: "John", age: 34]
        }
    ]
attributes: #[
    with: #[
        types: [
                :block
            ]
        description: "embed given symbols"
        ]
    raw: #[
        types: [
                :logical
            ]
        description: "create dictionary from raw block"
        ]
    data: #[
        types: [
                :logical
            ]
        description: "parse input as data"
        ]
    ]
arguments: #[
    source: [
            :string
             :block
        ]
    ]
related: [
        "Reflection/dictionary?"
         "Converters/function"
         "Numbers/factors"
         "Numbers/infinity"
    ]