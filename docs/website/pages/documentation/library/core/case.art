name: "case"
type: :function
description: "match given argument against different values and execute corresponding block"
module: "Core"
returns: [
                :logical
        ]
line: 276
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Core.nim#L276"
examples: [
                {
                        x: 2
                        
                        ; the main block is always evaluated!
                        case x [
                            1   -> print "x is one!"
                            2   -> print "x is two!"
                            any -> print "x is none of the above"
                        ]
                        ; x is two!
                }
                 {
                        key: "one"
                        case key [
                            "one" 1,        ; we can also return
                            "two" 2         ; simple constant values directly
                        ]
                        ; => 2
                }
                 {
                        case "hello" #[
                            hello: "hola"
                            adios: "goodbye"
                        ]
                        ; => "hola"
                }
        ]
attributes: #[
        ]
arguments: #[
        argument: [
                        :any
                ]
        matches: [
                        :dictionary
                         :block
                ]
        ]
related: [
                "Core/coalesce"
                 "Core/when"
                 "Core/else"
                 "Core/call"
        ]