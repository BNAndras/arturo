name: "method"
type: :function
description: "create type method with given arguments and body"
module: "Core"
returns: [
                :method
        ]
line: 1092
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Core.nim#L1092"
examples: [
                {
                        define :cat [
                        init: method [nick :string age :integer][
                            this\nick: join.with: " " @["Mr." capitalize nick]
                            this\age: age
                        ]
                        
                        ; Function overloading
                        add: method [years :integer][
                            this\age: age + this\age
                        ]
                        
                        meow: method [][
                            print [~"|this\nick|:" "'meow!'"]
                        ]
                                ]
                        
                                a: to :cat [15 15]
                                ; >> Assertion | [is? :string nick]
                                ;        error |  
                        
                                snowflake: to :cat ["snowflake" 3]
                        
                                snowflake\meow
                                ; Mr. Snowflake: 'meow!'
                        
                                ; use `do -> snowflake\meow` instead 
                                ; when running the above code from a file
                        
                                add snowflake 3
                                snowflake\age
                                ; => 6
                        
                                snowflake\add 3
                                print snowflake\age
                                ; => 9
                        
                                ; use `do [snowflake\add 3]` instead
                                ; when running the above code from a file
                }
        ]
attributes: #[
        distinct: #[
                types: [
                                :logical
                        ]
                description: "shouldn\'t be treated as a magic method"
                ]
        public: #[
                types: [
                                :logical
                        ]
                description: "make method public (relevant only in modules!)"
                ]
        ]
arguments: #[
        arguments: [
                        :literal
                         :block
                ]
        body: [
                        :block
                ]
        ]
related: [
                "Core/function"
                 "Core/module"
                 "Core/with"
                 "Core/new"
        ]