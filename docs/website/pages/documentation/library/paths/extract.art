name: "extract"
type: :function
module: "Paths"
returns: [
        :string
         :dictionary
    ]
description: "extract components from path"
examples: [
        {
            path: "/this/is/some/path.txt"
            
            print extract.directory path        ; /this/is/some
            print extract.basename path         ; path.txt
            print extract.filename path         ; path
            print extract.extension path        ; .txt
            
            print extract path 
            ; [directory:/this/is/some basename:path.txt filename:path extension:.txt]
        }
         {
            url: "http://subdomain.website.com:8080/path/to/file.php?q=something#there"
            
            print extract.scheme url            ; http
            print extract.host url              ; subdomain.website.com
            print extract.port url              ; 8080
            print extract.user url              ; 
            print extract.password url          ;
            print extract.path url              ; /path/to/file.php
            print extract.query url             ; q=something
            print extract.anchor url            ; there
            
            print extract url
            ; [scheme:http host:subdomain.website.com port:8080 user: password: path:/path/to/file.php query:q=something anchor:there]
        }
         {
            extract #magenta
            ; => [red:255 green:0 blue:255]
            
            extract.red #FF126D
            ; => 255
            
            extract.hsl #magenta
            ; => [hue:300 saturation:1.0 luminosity:0.5]
            
            extract.hue #magenta
            ; => 300
        }
    ]
attributes: #[
    directory: #[
        types: [
                :boolean
            ]
        description: "get path directory"
        ]
    basename: #[
        types: [
                :boolean
            ]
        description: "get path basename (filename+extension)"
        ]
    filename: #[
        types: [
                :boolean
            ]
        description: "get path filename"
        ]
    extension: #[
        types: [
                :boolean
            ]
        description: "get path extension"
        ]
    scheme: #[
        types: [
                :boolean
            ]
        description: "get scheme field from URL"
        ]
    host: #[
        types: [
                :boolean
            ]
        description: "get host field from URL"
        ]
    port: #[
        types: [
                :boolean
            ]
        description: "get port field from URL"
        ]
    user: #[
        types: [
                :boolean
            ]
        description: "get user field from URL"
        ]
    password: #[
        types: [
                :boolean
            ]
        description: "get password field from URL"
        ]
    path: #[
        types: [
                :boolean
            ]
        description: "get path field from URL"
        ]
    query: #[
        types: [
                :boolean
            ]
        description: "get query field from URL"
        ]
    anchor: #[
        types: [
                :boolean
            ]
        description: "get anchor field from URL"
        ]
    red: #[
        types: [
                :boolean
            ]
        description: "get red component from color"
        ]
    green: #[
        types: [
                :boolean
            ]
        description: "get green component from color"
        ]
    blue: #[
        types: [
                :boolean
            ]
        description: "get blue component from color"
        ]
    hsl: #[
        types: [
                :boolean
            ]
        description: "get HSL representation from color"
        ]
    hue: #[
        types: [
                :boolean
            ]
        description: "get hue component from color"
        ]
    saturation: #[
        types: [
                :boolean
            ]
        description: "get saturation component from color"
        ]
    luminosity: #[
        types: [
                :boolean
            ]
        description: "get luminosity component from color"
        ]
    ]
arguments: #[
    path: [
            :string
             :color
        ]
    ]
related: [
        "Collections/extend"
         "Reflection/stack"
         "System/exit"
         "Binary/xor"
    ]