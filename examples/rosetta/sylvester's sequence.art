getIntegerType: function [int][
    (integer?.big int)? -> "big" -> "normal"
]

customProduct: function [idx, lst][
    result: 1
    loop lst 'item [
        print ["Term No" idx "-> multiplying:" result "(" getIntegerType result ")" "with:" item "(" getIntegerType item ")"]
        result: result * item
        print ["result:" result]
    ]
    print "------"
    return result
]

sylvester: function [lim][
    result: [2]
    loop 2..lim 'x [
        'result ++ customProduct x-1 result
    ]
    return result
]
lst: sylvester 10

print "First 10 terms of the Sylvester sequence:"
print lst
print ""

sumRep: round sum map lst => [1 // &]

print "Sum of the reciprocals of the first 10 items:"
print sumRep