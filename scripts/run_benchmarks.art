"=========================================="
"Art:uro | Running benchmarks..."
"=========================================="

benchmarksDir "benchmarks"
padding 12

mm $(matches $(shell "./arturo -v") "/build (\d+)/")
version mm.0.1

output ""
store [line]{
	output output+line
	if line!="" { 
		if $(or $(contains line "Algorithm") $(contains line "---")) {
			output output + "\n"
			print line
		} {
			print line true 
		}
	} {
		output output + "\n"
		print ""
	}
}

process [path,bin,expect]{
	out ""
	if $(exists "../"+path) {
		execTime $(timer { out $(shell bin + " " + path) })
		if out=false { return $(padLeft "X" padding) }

		if $(strip out)=$(strip expect) {
			return $(padLeft $(toString execTime) padding)
		} {
			return $(padLeft "X" padding)
		}
	} {
		return $(padLeft "-" padding)
	}
}

""
store "-------------------------------------------------------------------------------------------------------------------"
store $(padLeft "Algorithm" 18) + " | " + $(padLeft "Arturo" padding) + $(padLeft "Ruby" padding) + $(padLeft "Python" padding) + $(padLeft "PHP" padding) + $(padLeft "Lua" padding) + $(padLeft "Tcl" padding)
store "-------------------------------------------------------------------------------------------------------------------"

loop $(sort $(dir "../"+benchmarksDir)) [file]{
	if $(contains file ".art") {
		title 		$(replace file ".art" "")
		store $(padLeft title 18) + " | "

		artPath		benchmarksDir + "/" + file
		rbPath 		benchmarksDir + "/" + title + ".rb"
		pyPath		benchmarksDir + "/" + title + ".py"
		phpPath		benchmarksDir + "/" + title + ".php"
		luaPath		benchmarksDir + "/" + title + ".lua"
		tclPath		benchmarksDir + "/" + title + ".tcl"

		outPath		benchmarksDir + "/" + title + ".out"
		expected	""
		if $(exists "../"+outPath) { expected $(read "../"+outPath) }

		store $(process artPath "./arturo" expected)
		store $(process rbPath "ruby" expected)
		store $(process pyPath "python" expected)
		store $(process phpPath "php" expected)
		store $(process luaPath "lua" expected)
		store $(process tclPath "tclsh" expected)

		store ""
	}
}

""
"All benchmarks completed."
""

write "../"+benchmarksDir+"/results/build" + version + ".txt" output