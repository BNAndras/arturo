inplaceEquivalence: $[value :any func :literal params :block][
    ;; returns: [reference, inplaced]
    @[
        call func append @[value] params
        returnInplaced value func params
    ]
] 

inplacePathEquivalence: $[value :any func :literal params :block][
    ;; returns: [reference, inplaced]
    @[
        call func append @[value] params
        returnInplacedPath value func params
    ]
]

fullInplaceEquivalence: $[value :any func :literal params :block][
    ;; returns: [reference, inplaced, inplaced-path]
    @[
        call func append @[value] params
        returnInplaced value func params
        returnInplacedPath value func params
    ]
]

returnInplaced: $[value :any func :literal params :block][
    inplaced: new value
    call func ['inplaced] ++ params
    return inplaced
]

returnInplacedPath: $[value :any func :literal params :block][
    inplaced: #[value: new value]
    call func ['inplaced\value] ++ params
    return inplaced\value
]