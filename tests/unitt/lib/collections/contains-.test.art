import {unitt}!

suite "contains? for :string types" [

    test ":string may contain :string" [
        assert -> contains? "Arturo" "Art"
        assert -> not? contains? "Arturo" "Ops!"
    ]

    test ":string may contain :char" [
        assert -> contains? "Arturo" 'A'
        assert -> contains? "Arturo" 't'
        assert -> not? contains? "Arturo" 'i'
    ]

    test ":string may contain :literal" [
        assert -> contains? "Arturo" 'Art
        assert -> contains? "Arturo" 't
        assert -> not? contains? "Arturo" 'i
    ]

    test ":string may contain :regex" [
        assert -> contains? "Arturo" {/[Art]/}
        assert -> not? contains? "Arturo" '{/[i]/}
    ]

]

suite "test .at attribute" [

    test.skip "element at 0 must be equal to first" [

    ]

    test.skip "element at high must be equal to last" [

    ]

    test.skip "element at x must be equal to get x" [

    ]

    test.skip "negative index should verify from backyards" [

    ]

]