import {unitt}!

suite "contains? for :string types" [

    test ":string may contain :string" [
        assert -> contains? "Arturo" "Art"
        assert -> not? contains? "Arturo" "Ops!"
    ]

    test ":string may contain :char" [
        assert -> contains? "Arturo" 'A'
        assert -> contains? "Arturo" 't'
        assert -> not? contains? "Arturo" 'i'
    ]

    test ":string may contain :literal" [
        assert -> contains? "Arturo" 'Art
        assert -> contains? "Arturo" 't
        assert -> not? contains? "Arturo" 'i
    ]

    test ":string may contain :regex" [
        assert -> contains? "Arturo" {/[Art]/}
        assert -> not? contains? "Arturo" '{/[i]/}
    ]
    
    test "word contains x at 0 if x is the first char of word" [
        word: "Arturo"

        assert -> contains?.at: 0 (word) (to :char first word)
        assert -> contains?.at: 0 (word) (to :string first word)

        assert -> not? contains?.at: 0 (word) (to :char last word)
        assert -> not? contains?.at: 0 (word) (to :string last word)
    ]

]