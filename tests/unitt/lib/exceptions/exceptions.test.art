;; Tests for the Exceptions's Internal Library

import {unitt}!


fileNotFound: try [ throw "File not found" ]


suite "Behevioral based" [

    test.prop "thrown error is catched by 'try" [
        assert -> not? throws? [
            error: try [
                throw "File not found"
            ]
        ]
    ]

    test "thrown errors at user level are runtime errors by default" [
        fileNotFound: try [ throw "File not found" ]
        assert -> runtimeError = fileNotFound
    ]
    
    test "throw's message parameter goes to :error's message member" [
        fileNotFound: try [ throw "File not found" ]
        assert -> "File not found" = fileNotFound\message
    ]

]


suite "Type based" [

    test.prop "catched error is an :error" [
        err: fileNotFound
        assert -> error? err
        assert -> :error = type err
    ]

    test.prop ":error contains \\kind and \\message" [
        err: fileNotFound
        
        assert -> not? throws? [
            kind: err\kind
            msg:  err\message
        ]
    ]
    
    test.prop ":error's \\kind is an :errorKind" [
        err: fileNotFound

        assert -> errorKind? err\kind
        assert -> :errorKind = type err\kind
    ]

    test.prop ":error's \\message is an :string" [
        err: fileNotFound

        assert -> string? err\message
        assert -> :string = type err\message
    ]

]