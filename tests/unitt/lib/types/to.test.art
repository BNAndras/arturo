import {unitt}!


for: $[targetType :type cases :block][
    test ~"to |targetType|:" 
    flatten.once map @cases 'p [
        source: first p
        expected: last p
        assertion: [equal?] 
            | append expected
            | append [to]
            | append targetType
            | append source

        [assert] ++ @[assertion]
    ]
]

pair: $[source target][
    @[source target]
]

alias.infix {>>} 'pair

; --------------------------------------

for :integer [
    ; From :null
    null >> 0

    ; From :logical
    true  >> 1
    false >> 0
    maybe >> null
]

for :floating [
    ; From :null
    ; null >> 0.0

    ; From :logical
    true  >> 1.0
    false >> 0.0
    maybe >> null
]

for :logical [
    ; From :null
    null >> false

    ; From :logical
    true  >> true
    false >> false
    maybe >> maybe
]

for :string [
    ; From :null
    null >> "null"

    ; From :logical
    true  >> "true"
    false >> "false"
    maybe >> "maybe"
]