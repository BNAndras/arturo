import {unitt}!
import ./{to.helper.art}!

for :integer [
    section :null [
        null >> 0
    ]

    section :logical [
        true  >> 1
        false >> 0
        maybe >> null
    ]

    section :integer [
        1 >> 1
        0 >> 0
        (neg 1) >> (neg 1)
    ]
    
    section :floating [
        1.0 >> 1
        0.0 >> 0
        (neg 1.0) >> (neg 1)

        1.1 >> 1
        1.5 >> 1
        1.9 >> 1
    ]
]


for :floating [
    section :null [
        ; null >> 0.0
    ]

    section :logical [
        true  >> 1.0
        false >> 0.0
        maybe >> null
    ]

    section :integer [
        1 >> 1.0
        0 >> 0.0
        (neg 1) >> (neg 1.0)
    ]
    
    section :floating [
        1.0 >> 1.0
        0.0 >> 0.0
        (neg 1.0) >> (neg 1.0)
    ]
]


for :logical [
    section :null [
        null >> false
    ]

    section :logical [
        true  >> true
        false >> false
        maybe >> maybe
    ]

    section :integer [
        0 >> false
        1 >> true
        (neg 1) >> true
        (random 1 1000) >> true
        (random neg 1000 neg 1) >> true
    ]
   
    section :floating [
        0.0 >> false
        1.0 >> true
        (neg 1.0) >> true
    ]
]


for :string [
    section :null [
        null >> "null"
    ]

    section :logical [
        true  >> "true"
        false >> "false"
        maybe >> "maybe"
    ]

    section :integer [
        1 >> "1"
        0 >> "0"
        (neg 1) >> "-1"
    ]
    
    section :floating [
        1.0 >> "1.0"
        0.0 >> "0.0"
        (neg 1.0) >> "-1.0"
    ]

    section :complex [
        (to :complex [1 5]) >> "1.0+5.0i"
    ]
]

for :rational [

    section :null [
        ; null >> 0:1
    ]

    section :logical [
        ; true  >> 1:1
        ; false >> 0:1
        ; maybe >> null
    ]

    section :integer [
        1 >> 1:1
        0 >> 0:1
        (neg 1) >> neg 1:1
    ]
    
    section :floating [
        1.0 >> 1:1
        0.0 >> 0:1
        (neg 1.0) >> neg 1:1
    ]
]

for :char [

    section :null [
        ; null >> ''    ; Should be '\0'
    ]

    section :logical [
        ; true  >> 'Y'
        ; false >> 'N'
        ; maybe >> '?'
    ]

    section :integer [
        75 >> 'K'
        1000 >> 'Ï¨' ; supports UNICODE
    ]
    
    section :floating [
        75.0   >> 'K'
        50.0 >> '2'
    ]

]

for :quantity [

    section :null [
        ; null >> 0`
    ]

    section :logical [
        ; true  >> 1`
        ; false >> 0`
        ; maybe >> null
    ]

    section :integer [
        0 >> 0`
        1 >> 1`
        (neg 1) >> neg 1`
    ]
    
    section :floating [
        0.0 >> 0`
        1.0 >> 1`
        (neg 1.0) >> neg 1`
        1.5 >> 1.5`
    ]

]


for :date [

    section :null [
        
    ]

    section :logical [
        
    ]

    section :integer [
        0 >> to :date "1969-12-31T21:00:00-03:00"
    ]

]

for :binary [

    section :null [

    ]

    section :logical [
        
    ]

    section :integer [
        ; There is no such way of properly testing it right now?
        0 >> to :binary 0           ; Should be 0b0000
        1 >> to :binary 1           ; Should be 0b0001
        (neg 1) >> to :binary neg 1 ; Should be 0b1111
    ]
    
    section :floating [
        ; There is no such way of properly testing it right now?
        ; 0.0 >> to :binary 0           ; Should be 0b0000
        ; 1.0 >> to :binary 1           ; Should be 0b0001
        ; (neg 1.0) >> to :binary neg 1 ; Should be 0b1111
    ]
    ]

]