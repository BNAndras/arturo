import {unitt}!


fromTo: $[sourceType :type targetType :type cases :block][
    test ~"|targetType| from |sourceType|:" 
    flatten.once map @cases 'p [
        source: first p
        expected: last p
        assertion: [equal?] 
            | append expected
            | append [to]
            | append targetType
            | append source

        [assert] ++ @[assertion]
    ]
]

alias.infix {==>} 'fromTo

pair: $[source target][
    @[source target]
]

alias.infix {>>} 'pair

fromTo :null :logical [
    null >> false
]

fromTo :null :integer [
    null >> 0
]

fromTo :null :string [
    null >> "null"
]


fromTo :logical :floating [
    true  >> 1.0
    false >> 0.0
    maybe >> null
]

fromTo :logical :floating [
    true  >> 1.0
    false >> 0.0
    maybe >> null
]

fromTo :logical :string [
    true  >> "true"
    false >> "false"
    maybe >> "maybe"
]