byteCode: function [blk][
    btc: to :bytecode blk
    inspect btc
    print get btc 'code
]

;---------------------------------------------------------
; Boolean values
;---------------------------------------------------------

byteCode [true]
; ================================
;  DATA
; ================================

; ================================
;  CODE
; ================================
; constbt
; end

byteCode [false]
; ================================
;  DATA
; ================================

; ================================
;  CODE
; ================================
; constbf
; end

byteCode [maybe]
; ================================
;  DATA
; ================================
; 0: maybe :word

; ================================
;  CODE
; ================================
; load0
; end

;---------------------------------------------------------
; Integer values
;---------------------------------------------------------

byteCode [1]
; ================================
;     DATA
; ================================

; ================================
;     CODE
; ================================
; consti1
; end

byteCode [10]
; ================================
;     DATA
; ================================

; ================================
;     CODE
; ================================
; consti10
; end

byteCode [123]
; ================================
;     DATA
; ================================
; 0: 123 :integer

; ================================
;     CODE
; ================================
; push0
; end

byteCode [1234567890123]
; ================================
;     DATA
; ================================
; 0: 1234567890123 :integer

; ================================
;     CODE
; ================================
; push0
; end