#!/usr/bin/env arturo
;==========================================
; Tester
;
; @file: tools/tester.art
; @author: drkameleon
;==========================================

errorMargin: 0
if 1 = size arg -> errorMargin: to :integer first arg

supersuccess: 0
supertotal: 0

runSet: function [title,location].export:[supersuccess,supertotal][
    print "====================================================================="
    print color #cyan.bold ~"  |title|"
    print "====================================================================="
    tests: sort select list relative location => [in? ".res"]
    success: 0

    loop tests 'test [
        script: replace test ".res" ".art"
        expected: split.lines strip read test

        prints pad.right ((color #magenta "\n- Running: ") ++ truncate.preserve extract.filename script 40) 70 
        result: split.lines strip execute ~{arturo --no-color "|script|"}

        if? result=expected [
            prints color #green.bold "[ OK ]"
            success: success + 1
        ]
        else [
            print "<-------------------"
            print result
            print "------------------->"
            prints color #red "[ Error ]"
        ]
    ] 

    print "\n"
    print pad.left render.template "<||= success ||> of <||= size tests ||> tasks succeeded â—€" 64
    print ""
    ; print "=====================================================================\n"

    supersuccess: supersuccess + success
    supertotal: supertotal + size tests

    if success < (size tests)-errorMargin [ 
        panic.code: 1 "testing failed"
    ]
]

; print color #white.bold {
;     =====================================================================
;       Arturo Tester
;     =====================================================================
; }

print color #white.bold "\n  Arturo:\n  Unit Tester tool\n"

supertime: to :string .format: ".2f" benchmark.get [
    runSet "Unit Tests" "../tests/unittests"
    runSet "Errors" "../tests/errors"
    runSet "Examples" "../examples/rosetta"
]

print ""
print color #cyan "====================================================================="

print [color #cyan "|" color #white.bold "ANALYSIS                                                         " color #cyan "|"]
print color #cyan "====================================================================="
print [color #cyan "|" "Tests executed:" supertotal color #cyan pad "|" 50 - size to :string supertotal]
print [color #cyan "|" "Tests succeeded:" supersuccess color #cyan pad "|" 49 - size to :string supertotal]
rate: to :string .format:".1f" 100 * supersuccess//supertotal
print color #cyan "====================================================================="
print [color #cyan "|" "Success rate:" append rate "%" color #cyan pad "|" 51 - size rate]
print [color #cyan "|" "Total time:" append supertime "s" color #cyan pad "|" 53 - size supertime]
print color #cyan "====================================================================="

exit